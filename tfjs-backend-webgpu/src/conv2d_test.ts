/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */

import * as tf from '@tensorflow/tfjs-core';
import {test_util} from '@tensorflow/tfjs-core';
import {describeWebGPU} from './test_util';

describeWebGPU('conv2d', () => {
  it('conv2d x=[1,8,8,3] f=[3,3,3,64] s=[2,2] d=1 p=valid Conv2DMMVec4Program remainder != 0',
     async () => {
       const inputDepth = 3;
       const xSize = 8;
       const inputShape: [number, number, number, number] =
           [1, xSize, xSize, inputDepth];
       const outputDepth = 64;
       const fSize = 3;
       const pad = 'valid';
       const stride: [number, number] = [2, 2];

       const inputData = [];
       for (let i = 0; i < xSize * xSize * inputDepth; i++) {
         inputData.push(i % 5);
       }

       const wData = [];
       for (let i = 0; i < fSize * fSize * inputDepth * outputDepth; i++) {
         wData.push(i % 5);
       }

       const x = tf.tensor4d(inputData, inputShape);
       const w = tf.tensor4d(wData, [fSize, fSize, inputDepth, outputDepth]);

       const result = tf.conv2d(x, w, stride, pad);
       expect(result.shape).toEqual([1, 3, 3, 64]);
       test_util.expectArraysClose(
           await result.data(), new Float32Array([
             104, 125, 126, 102, 53,  104, 125, 126, 102, 53,  104, 125, 126,
             102, 53,  104, 125, 126, 102, 53,  104, 125, 126, 102, 53,  104,
             125, 126, 102, 53,  104, 125, 126, 102, 53,  104, 125, 126, 102,
             53,  104, 125, 126, 102, 53,  104, 125, 126, 102, 53,  104, 125,
             126, 102, 53,  104, 125, 126, 102, 53,  104, 125, 126, 102, 133,
             126, 104, 57,  110, 133, 126, 104, 57,  110, 133, 126, 104, 57,
             110, 133, 126, 104, 57,  110, 133, 126, 104, 57,  110, 133, 126,
             104, 57,  110, 133, 126, 104, 57,  110, 133, 126, 104, 57,  110,
             133, 126, 104, 57,  110, 133, 126, 104, 57,  110, 133, 126, 104,
             57,  110, 133, 126, 104, 57,  110, 133, 126, 104, 57,  137, 102,
             57,  112, 142, 137, 102, 57,  112, 142, 137, 102, 57,  112, 142,
             137, 102, 57,  112, 142, 137, 102, 57,  112, 142, 137, 102, 57,
             112, 142, 137, 102, 57,  112, 142, 137, 102, 57,  112, 142, 137,
             102, 57,  112, 142, 137, 102, 57,  112, 142, 137, 102, 57,  112,
             142, 137, 102, 57,  112, 142, 137, 102, 57,  112, 116, 53,  110,
             142, 149, 116, 53,  110, 142, 149, 116, 53,  110, 142, 149, 116,
             53,  110, 142, 149, 116, 53,  110, 142, 149, 116, 53,  110, 142,
             149, 116, 53,  110, 142, 149, 116, 53,  110, 142, 149, 116, 53,
             110, 142, 149, 116, 53,  110, 142, 149, 116, 53,  110, 142, 149,
             116, 53,  110, 142, 149, 116, 53,  110, 142, 50,  104, 133, 137,
             116, 50,  104, 133, 137, 116, 50,  104, 133, 137, 116, 50,  104,
             133, 137, 116, 50,  104, 133, 137, 116, 50,  104, 133, 137, 116,
             50,  104, 133, 137, 116, 50,  104, 133, 137, 116, 50,  104, 133,
             137, 116, 50,  104, 133, 137, 116, 50,  104, 133, 137, 116, 50,
             104, 133, 137, 116, 50,  104, 133, 137, 104, 125, 126, 102, 53,
             104, 125, 126, 102, 53,  104, 125, 126, 102, 53,  104, 125, 126,
             102, 53,  104, 125, 126, 102, 53,  104, 125, 126, 102, 53,  104,
             125, 126, 102, 53,  104, 125, 126, 102, 53,  104, 125, 126, 102,
             53,  104, 125, 126, 102, 53,  104, 125, 126, 102, 53,  104, 125,
             126, 102, 53,  104, 125, 126, 102, 133, 126, 104, 57,  110, 133,
             126, 104, 57,  110, 133, 126, 104, 57,  110, 133, 126, 104, 57,
             110, 133, 126, 104, 57,  110, 133, 126, 104, 57,  110, 133, 126,
             104, 57,  110, 133, 126, 104, 57,  110, 133, 126, 104, 57,  110,
             133, 126, 104, 57,  110, 133, 126, 104, 57,  110, 133, 126, 104,
             57,  110, 133, 126, 104, 57,  137, 102, 57,  112, 142, 137, 102,
             57,  112, 142, 137, 102, 57,  112, 142, 137, 102, 57,  112, 142,
             137, 102, 57,  112, 142, 137, 102, 57,  112, 142, 137, 102, 57,
             112, 142, 137, 102, 57,  112, 142, 137, 102, 57,  112, 142, 137,
             102, 57,  112, 142, 137, 102, 57,  112, 142, 137, 102, 57,  112,
             142, 137, 102, 57,  112, 116, 53,  110, 142, 149, 116, 53,  110,
             142, 149, 116, 53,  110, 142, 149, 116, 53,  110, 142, 149, 116,
             53,  110, 142, 149, 116, 53,  110, 142, 149, 116, 53,  110, 142,
             149, 116, 53,  110, 142, 149, 116, 53,  110, 142, 149, 116, 53,
             110, 142, 149, 116, 53,  110, 142, 149, 116, 53,  110, 142, 149,
             116, 53,  110, 142
           ]));
     });
});
