steps:
# Install top-level deps.
- name: 'node:10'
  entrypoint: 'yarn'
  id: 'yarn'
  args: ['install']

# Run diff to find modified files in each folder.
- name: 'node:10'
  entrypoint: 'yarn'
  id: 'diff'
  args: ['diff']
  waitFor: ['yarn']
  env:
  - 'COMMIT_SHA=$COMMIT_SHA'
  - 'BRANCH_NAME=$BRANCH_NAME'

# Core.
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  id: 'tfjs-core'
  args: ['./scripts/run-build.sh', 'tfjs-core']
  waitFor: ['diff']

# Converter.
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  id: 'tfjs-converter'
  args: ['./scripts/run-build.sh', 'tfjs-converter']
  waitFor: ['diff']

# Data.
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  id: 'tfjs-data'
  args: ['./scripts/run-build.sh', 'tfjs-data']
  waitFor: ['diff']

# Layers.
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  id: 'tfjs-layers'
  args: ['./scripts/run-build.sh', 'tfjs-layers']
  waitFor: ['diff']

# Union.
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  id: 'tfjs'
  args: ['./scripts/run-build.sh', 'tfjs']
  waitFor: ['diff']

# Vis.
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  id: 'tfjs-vis'
  args: ['./scripts/run-build.sh', 'tfjs-vis']
  waitFor: ['diff']

# WebGPU.
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  id: 'tfjs-backend-webgpu'
  args: ['./scripts/run-build.sh', 'tfjs-backend-webgpu']
  waitFor: ['diff']

# WASM.
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  id: 'tfjs-backend-wasm'
  args: ['./scripts/run-build.sh', 'tfjs-backend-wasm']
  waitFor: ['diff']

# React Native.
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  id: 'tfjs-react-native'
  args: ['./scripts/run-build.sh', 'tfjs-react-native']
  waitFor: ['diff']

# Node CPU.
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  id: 'tfjs-node'
  args: ['./scripts/run-build.sh', 'tfjs-node']
  waitFor: ['diff']

# Node GPU.
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  id: 'tfjs-node-gpu'
  args: ['./scripts/run-build.sh', 'tfjs-node-gpu']
  waitFor: ['diff']

# Integration tests
- name: 'node:10'
  dir: 'tfjs-core'
  id: 'test-integration'
  entrypoint: 'yarn'
  args: ['test-integration']
  waitFor: ['diff']
  env: ['BROWSERSTACK_USERNAME=deeplearnjs1', 'NIGHTLY=$_NIGHTLY']
  secretEnv: ['BROWSERSTACK_KEY']

# Release notes test
- name: 'node:10'
  id: 'test-monorepo'
  entrypoint: 'yarn'
  args: ['test-release-notes']
  waitFor: ['yarn']

# General settings.
secrets:
- kmsKeyName: projects/learnjs-174218/locations/global/keyRings/tfjs/cryptoKeys/enc
  secretEnv:
    BROWSERSTACK_KEY: CiQAkwyoIW0LcnxymzotLwaH4udVTQFBEN4AEA5CA+a3+yflL2ASPQAD8BdZnGARf78MhH5T9rQqyz9HNODwVjVIj64CTkFlUCGrP1B2HX9LXHWHLmtKutEGTeFFX9XhuBzNExA=
timeout: 3600s
logsBucket: 'gs://tfjs-build-logs'
options:
  logStreamingOption: 'STREAM_ON'
  substitution_option: 'ALLOW_LOOSE'
